name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    strategy:
      fail-fast: false
      matrix:
        php: [8.1, 8.2]
        kit: [phone-auth]
    
    name: PHP ${{ matrix.php }} - ${{ matrix.kit }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, pdo_mysql
        coverage: none
    
    - name: Install dependencies
      working-directory: ./${{ matrix.kit }}
      run: composer install --prefer-dist --no-progress
    
    - name: Prepare environment
      working-directory: ./${{ matrix.kit }}
      run: |
        cp .env.example .env
        php artisan key:generate
    
    - name: Run database migrations
      working-directory: ./${{ matrix.kit }}
      run: php artisan migrate --no-interaction --force
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: laravel_test
        DB_USERNAME: root
        DB_PASSWORD: 
    
    - name: Run tests
      working-directory: ./${{ matrix.kit }}
      run: vendor/bin/phpunit
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: laravel_test
        DB_USERNAME: root
        DB_PASSWORD: 
    
  frontend:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        node: [16, 18]
        kit: [phone-auth]
    
    name: Node ${{ matrix.node }} - ${{ matrix.kit }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        cache: 'npm'
        cache-dependency-path: ./${{ matrix.kit }}/package-lock.json
    
    - name: Install dependencies
      working-directory: ./${{ matrix.kit }}
      run: npm ci
    
    - name: Run frontend tests
      working-directory: ./${{ matrix.kit }}
      run: npm test -- --run
    
    - name: Check for linting errors
      working-directory: ./${{ matrix.kit }}
      run: npm run lint
    
    - name: Build assets
      working-directory: ./${{ matrix.kit }}
      run: npm run build
  
  security:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        kit: [phone-auth]
        
    name: Security scan - ${{ matrix.kit }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
    
    - name: Install dependencies
      working-directory: ./${{ matrix.kit }}
      run: composer install --prefer-dist --no-progress
    
    - name: PHP Security Checker
      uses: symfonycorp/security-checker-action@v4
      with:
        lock: ./${{ matrix.kit }}/composer.lock
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    
    - name: Install dependencies
      working-directory: ./${{ matrix.kit }}
      run: npm ci
    
    - name: NPM audit
      working-directory: ./${{ matrix.kit }}
      run: npm audit --audit-level=moderate
